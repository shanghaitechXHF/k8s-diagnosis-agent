[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "k8s-diagnosis-agent"
version = "0.1.0"
description = "AI Agent for Kubernetes cluster fault diagnosis"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "kubernetes>=28.1.0",
    "openai>=1.3.5",
    "anthropic>=0.7.7",
    "httpx>=0.25.2",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "jsonschema>=4.20.0",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "loguru>=0.7.2",
    "prometheus-client>=0.19.0",
    "websockets>=12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
]

[project.scripts]
k8s-diagnosis-agent = "k8s_diagnosis_agent.cli:main"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 