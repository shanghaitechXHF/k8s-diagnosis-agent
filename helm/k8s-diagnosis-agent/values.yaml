# Default values for k8s-diagnosis-agent
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: k8s-diagnosis-agent
  pullPolicy: IfNotPresent
  tag: "0.1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service Account配置
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod安全上下文
podSecurityContext:
  fsGroup: 1000

# 容器安全上下文
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

# 服务配置
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

# Ingress配置
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: k8s-diagnosis-agent.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: k8s-diagnosis-agent-tls
  #    hosts:
  #      - k8s-diagnosis-agent.local

# 资源限制
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# 自动扩缩容
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node选择器
nodeSelector: {}

# 容忍度
tolerations: []

# 亲和性
affinity: {}

# 健康检查
livenessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# 应用配置
config:
  # LLM配置
  llm:
    defaultModel: "gpt-4"
    temperature: 0.7
    maxTokens: 4096
    timeout: 60
  
  # Web服务配置
  web:
    host: "0.0.0.0"
    port: 8000
    debug: false
    corsOrigins: ["*"]
  
  # 日志配置
  logging:
    level: "INFO"
    format: "json"
  
  # 会话配置
  session:
    timeout: 3600
    maxConversationLength: 50
  
  # 权限配置
  permissions:
    enabled: true
    defaultRole: "viewer"
    roles:
      admin:
        description: "管理员权限"
        tools: ["*"]
        commands: ["*"]
        kubeconfig: true
        ssh: true
      operator:
        description: "运维人员权限"
        tools: ["k8s_*", "system_*"]
        commands: ["get", "describe", "logs"]
        kubeconfig: true
        ssh: true
      viewer:
        description: "只读权限"
        tools: ["k8s_cluster_info", "k8s_node_info", "k8s_pod_info", "system_info"]
        commands: ["get", "describe"]
        kubeconfig: false
        ssh: false

# Secret配置（用于存储API密钥等敏感信息）
secrets:
  # LLM API密钥
  llmApiKeys:
    openai: ""
    claude: ""
    deepseek: ""
  
  # SSH配置
  ssh:
    enabled: false
    privateKey: ""
    knownHosts: ""

# ConfigMap配置
configMap:
  # Kubeconfig配置
  kubeconfig:
    enabled: false
    data: ""

# 持久化存储
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  
# RBAC配置
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "nodes", "events", "namespaces"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses", "networkpolicies"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["metrics.k8s.io"]
      resources: ["nodes", "pods"]
      verbs: ["get", "list"]

# 监控配置
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    path: /metrics
    labels: {}

# 多集群支持
multiCluster:
  enabled: false
  clusters: []
    # - name: cluster1
    #   kubeconfig: |
    #     # kubeconfig content
    # - name: cluster2
    #   kubeconfig: |
    #     # kubeconfig content 